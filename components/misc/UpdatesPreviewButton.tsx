import React from 'react';
import { useTheme } from '../../contexts/Theme';
import styles from './styles/UpdatesPreviewButton.module.scss';

export interface IUpdatesPreviewButtonProps {
  icon?: any; // has to be an SVG path
  viewBox?: string;
  callback?: () => any;
}

const UpdatesPreviewButton: React.FunctionComponent<IUpdatesPreviewButtonProps> = (props) => {
  const { colors, shadows, darkMode } = useTheme();
  return (
    <div
      onClick={props.callback}
      className={styles.btn}
      style={{
        backgroundColor: colors.background[100],
        boxShadow: darkMode ? '' : shadows.small,
        border: darkMode ? `1px solid ${colors.primary[100]}` : '',
      }}
    >
      <svg
        className={styles.icon}
        viewBox={props.viewBox ? props.viewBox : '0 0 6 10'}
        fill={darkMode ? colors.primary[100] : colors.text[60]}
      >
        {props.icon ? (
          props.icon
        ) : (
          <path
            xmlns="http://www.w3.org/2000/svg"
            d="M3.90311 5.12817L0.619334 1.55271C0.484625 1.41667 0.409058 1.23295 0.409058 1.04149C0.409058 0.85003 0.484625 0.66631 0.619334 0.530261C0.685483 0.46309 0.764332 0.409747 0.851291 0.373337C0.93825 0.336927 1.03158 0.318176 1.12586 0.318176C1.22013 0.318176 1.31346 0.336927 1.40042 0.373337C1.48738 0.409747 1.56623 0.46309 1.63238 0.530261L5.63647 4.6159C5.77099 4.75226 5.84641 4.9361 5.84641 5.12765C5.84641 5.31919 5.77099 5.50304 5.63647 5.6394L1.63238 9.72503C1.56623 9.7922 1.48738 9.84554 1.40042 9.88196C1.31346 9.91837 1.22013 9.93712 1.12586 9.93712C1.03158 9.93712 0.93825 9.91837 0.851291 9.88196C0.764332 9.84554 0.685483 9.7922 0.619334 9.72503C0.484625 9.58898 0.409058 9.40526 0.409058 9.21381C0.409058 9.02235 0.484625 8.83863 0.619334 8.70258L3.90311 5.12817Z"
          />
        )}
      </svg>
    </div>
  );
};

export default UpdatesPreviewButton;

/*

USAGE:

<HeaderButton
  viewBox="0 0 10 10"
  icon={
    <path
      xmlns="http://www.w3.org/2000/svg"
      d="M5.96126 5L8.89307 2.075C9.02146 1.94661 9.09359 1.77248 9.09359 1.59091C9.09359 1.40934 9.02146 1.23521 8.89307 1.10682C8.76468 0.978432 8.59055 0.906303 8.40898 0.906303C8.22741 0.906303 8.05328 0.978432 7.92489 1.10682L4.99989 4.03864L2.07489 1.10682C1.9465 0.978432 1.77237 0.906303 1.5908 0.906303C1.40923 0.906303 1.2351 0.978432 1.10671 1.10682C0.978321 1.23521 0.906193 1.40934 0.906193 1.59091C0.906193 1.77248 0.978321 1.94661 1.10671 2.075L4.03853 5L1.10671 7.925C1.0428 7.98839 0.992081 8.0638 0.957466 8.14688C0.922851 8.22997 0.905029 8.31908 0.905029 8.40909C0.905029 8.4991 0.922851 8.58822 0.957466 8.6713C0.992081 8.75439 1.0428 8.8298 1.10671 8.89318C1.17009 8.95709 1.2455 9.00781 1.32859 9.04243C1.41168 9.07704 1.50079 9.09486 1.5908 9.09486C1.68081 9.09486 1.76993 9.07704 1.85301 9.04243C1.9361 9.00781 2.01151 8.95709 2.07489 8.89318L4.99989 5.96137L7.92489 8.89318C7.98828 8.95709 8.06369 9.00781 8.14677 9.04243C8.22986 9.07704 8.31897 9.09486 8.40898 9.09486C8.49899 9.09486 8.58811 9.07704 8.67119 9.04243C8.75428 9.00781 8.82969 8.95709 8.89307 8.89318C8.95698 8.8298 9.0077 8.75439 9.04232 8.6713C9.07693 8.58822 9.09475 8.4991 9.09475 8.40909C9.09475 8.31908 9.07693 8.22997 9.04232 8.14688C9.0077 8.0638 8.95698 7.98839 8.89307 7.925L5.96126 5Z"
    />
  }
  callback={() => console.log('Pressed')}
/>

*/
