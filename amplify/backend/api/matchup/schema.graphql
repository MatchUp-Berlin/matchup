type MatchUp @model @auth(rules: [{ allow: public }]) {
  id: ID!
  title: String!
  signups: [SignUp] @hasMany(indexName: "byMatchUpSignUps", fields: ["id"])
  location: String!
  address: AWSJSON
  organizerId: ID
  organizer: User @hasOne(fields: ["organizerId"])
  sportCategory: String!
  skillLevel: String
  totalCost: Int
  reservedCourt: Boolean
  attendanceMin: Int
  attendanceMax: Int
  cancelled: Boolean
  indoor: Boolean
  description: String
  image: String
  date: AWSDateTime
  currency: String
  updates: [Update] @hasMany(indexName: "byMatchUpUpdates", fields: ["id"])
  watchList: [WatchList]
    @hasMany(indexName: "byMatchUpWatchList", fields: ["id"])
  organized: [Organized]
    @hasMany(indexName: "byMatchUpOrganized", fields: ["id"])
}

type User @model @auth(rules: [{ allow: public }]) {
  id: ID!
  givenName: String!
  familyName: String!
  email: String!
  signups: [SignUp] @hasMany(indexName: "byUserSignUps", fields: ["id"])
  organized: [Organized] @hasMany(indexName: "byUserOrganized", fields: ["id"])
  profileImage: String
  about: String
  updates: [Update] @hasMany(indexName: "byUserUpdates", fields: ["id"])
  watchList: [WatchList] @hasMany(indexName: "byUserWatchList", fields: ["id"])
}

type SignUp @model @auth(rules: [{ allow: public }]) {
  id: ID!
  userId: ID! @index(name: "byUserSignUps")
  matchUpId: ID! @index(name: "byMatchUpSignUps")
  user: User @belongsTo(fields: ["userId"])
  matchUp: MatchUp @belongsTo(fields: ["matchUpId"])
  attended: Boolean!
}

type Update @model @auth(rules: [{ allow: public }]) {
  id: ID!
  userId: ID! @index(name: "byUserUpdates")
  matchUpId: ID! @index(name: "byMatchUpUpdates")
  user: User @belongsTo(fields: ["userId"])
  matchUp: MatchUp @belongsTo(fields: ["matchUpId"])
  content: String!
}

type WatchList @model @auth(rules: [{ allow: public }]) {
  id: ID!
  userId: ID! @index(name: "byUserWatchList")
  matchUpId: ID! @index(name: "byMatchUpWatchList")
  user: User @belongsTo(fields: ["userId"])
  matchUp: MatchUp @belongsTo(fields: ["matchUpId"])
}

type Organized @model @auth(rules: [{ allow: public }]) {
  id: ID!
  userId: ID! @index(name: "byUserOrganized", queryField: "byUserOrganized")
  matchUpId: ID!
    @index(name: "byMatchUpOrganized", queryField: "byMatchUpOrganized")
  user: User @belongsTo(fields: ["userId"])
  matchUp: MatchUp @belongsTo(fields: ["matchUpId"])
}
